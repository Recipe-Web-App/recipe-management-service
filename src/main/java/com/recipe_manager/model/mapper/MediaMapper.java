package com.recipe_manager.model.mapper;

import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

import com.recipe_manager.model.dto.media.MediaDto;
import com.recipe_manager.model.dto.media.MediaSummaryDto;
import com.recipe_manager.model.dto.request.CreateMediaRequest;
import com.recipe_manager.model.entity.media.Media;

/**
 * MapStruct mapper for Media entity and related DTOs. Provides bidirectional mapping between
 * entities and DTOs with proper handling of all fields.
 */
@Mapper(componentModel = "spring")
public interface MediaMapper {

  /**
   * Maps a Media entity to a MediaDto.
   *
   * @param media the Media entity
   * @return the mapped MediaDto
   */
  MediaDto toDto(Media media);

  /**
   * Maps a MediaDto to a Media entity.
   *
   * @param mediaDto the MediaDto
   * @return the mapped Media entity
   */
  @Mapping(target = "mediaPath", ignore = true) // Not exposed in DTO for security
  Media toEntity(MediaDto mediaDto);

  /**
   * Maps a Media entity to a MediaSummaryDto.
   *
   * @param media the Media entity
   * @return the mapped MediaSummaryDto
   */
  MediaSummaryDto toSummaryDto(Media media);

  /**
   * Maps a CreateMediaRequest to a Media entity for initial creation.
   *
   * @param request the CreateMediaRequest
   * @return the mapped Media entity
   */
  @Mapping(target = "mediaId", ignore = true) // Generated by database
  @Mapping(target = "mediaPath", ignore = true) // Set by service layer
  @Mapping(target = "processingStatus", constant = "INITIATED")
  @Mapping(target = "createdAt", ignore = true) // Set by Hibernate
  @Mapping(target = "updatedAt", ignore = true) // Set by Hibernate
  Media toEntity(CreateMediaRequest request);
}
