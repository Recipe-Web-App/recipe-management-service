---
# Main Spring Boot application configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  application:
    name: recipe-manager-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:recipe_db}
    username: ${RECIPE_MANAGEMENT_DB_USER:recipe_user}
    password: ${RECIPE_MANAGEMENT_DB_PASSWORD:your_db_password}
    schema: ${POSTGRES_SCHEMA:my_schema}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        default_schema: ${DB_SCHEMA:public}
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  security:
    user:
      name: ${ADMIN_USER:admin}
      password: ${ADMIN_PASSWORD:admin}
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=600s

logging:
  level:
    root: INFO
    org.springframework.web: WARN
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    config: INFO
    exception: INFO
    controller: INFO
    service: INFO
    repository: INFO
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{requestId}] - %msg%n'
    file: >
      '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}
      [%X{requestId}] [%X{userId}] - %msg%n'

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    info:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:dev}
  health:
    defaults:
      enabled: true
    db:
      enabled: true
    disk:
      enabled: true
    memory:
      enabled: true

# Application-specific configuration
app:
  security:
    jwt:
      secret: ${JWT_SECRET:your-secret-key-here-change-in-production}
      expiration: 86400000 # 24 hours
    service:
      auth:
        enabled: ${SERVICE_AUTH_ENABLED:false}
        key: ${SERVICE_AUTH_KEY:}
  logging:
    request:
      enabled: true
      include-headers: true
      include-payload: true
      max-payload-length: 10000
  monitoring:
    metrics:
      enabled: true
    tracing:
      enabled: true
