---
# Main Spring Boot application configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false
  servlet:
    context-path: /api/v1/recipe-manager
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  application:
    name: recipe-manager-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:recipe_db}?stringtype=unspecified
    username: ${RECIPE_MANAGEMENT_DB_USER:recipe_user}
    password: ${RECIPE_MANAGEMENT_DB_PASSWORD:your_db_password}
    schema: ${POSTGRES_SCHEMA:my_schema}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        default_schema: ${POSTGRES_SCHEMA:recipe_manager}
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  flyway:
    default-schema: ${POSTGRES_SCHEMA:recipe_manager}
    schemas: ${POSTGRES_SCHEMA:recipe_manager}
    create-schemas: true
    baseline-on-migrate: true
  security:
    user:
      name: ${ADMIN_USER:admin}
      password: ${ADMIN_PASSWORD:admin}
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=600s

logging:
  level:
    root: DEBUG
    '[org.springframework.web]': DEBUG
    '[org.springframework.security]': DEBUG
    '[org.springframework.boot]': DEBUG
    '[org.springframework.data]': DEBUG
    '[org.springframework.transaction]': DEBUG
    '[org.hibernate.SQL]': DEBUG
    '[org.hibernate.type.descriptor.sql.BasicBinder]': TRACE
    '[org.hibernate.engine.transaction.internal.TransactionImpl]': DEBUG
    '[com.recipe_manager]': DEBUG
    config: DEBUG
    exception: DEBUG
    controller: DEBUG
    service: DEBUG
    repository: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{requestId}] - %msg%n'
    file: >
      '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}
      [%X{requestId}] [%X{userId}] - %msg%n'

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    info:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:dev}
  health:
    defaults:
      enabled: true
    db:
      enabled: true
    disk:
      enabled: true
    memory:
      enabled: true

# Application-specific configuration
app:
  security:
    jwt:
      secret: ${JWT_SECRET:your-secret-key-here-change-in-production}
      expiration: 86400000 # 24 hours
    service:
      auth:
        enabled: ${SERVICE_AUTH_ENABLED:false}
        key: ${SERVICE_AUTH_KEY:}
  logging:
    request:
      enabled: true
      include-headers: true
      include-payload: true
      max-payload-length: 10000
  monitoring:
    metrics:
      enabled: true
    tracing:
      enabled: true

# External services configuration
external:
  services:
    recipe-scraper:
      base-url: ${RECIPE_SCRAPER_BASE_URL:http://recipe.local}
      shopping-info-path: /api/recipe-scraper/recipes/{recipeId}/shopping-info
      enabled: ${RECIPE_SCRAPER_ENABLED:true}
      timeout: ${RECIPE_SCRAPER_TIMEOUT:5s}
      api-key: ${RECIPE_SCRAPER_API_KEY:}
    common:
      connect-timeout: ${EXTERNAL_SERVICES_CONNECT_TIMEOUT:3s}
      read-timeout: ${EXTERNAL_SERVICES_READ_TIMEOUT:10s}
      max-connections-per-route: ${EXTERNAL_SERVICES_MAX_CONN_PER_ROUTE:20}
      max-total-connections: ${EXTERNAL_SERVICES_MAX_TOTAL_CONN:100}
      log-requests: ${EXTERNAL_SERVICES_LOG_REQUESTS:false}
      enable-tracing: ${EXTERNAL_SERVICES_ENABLE_TRACING:true}

# Resilience configuration
resilience:
  circuit-breaker:
    failure-rate-threshold: ${CIRCUIT_BREAKER_FAILURE_RATE:50.0}
    wait-duration-in-open-state: ${CIRCUIT_BREAKER_WAIT_DURATION:30s}
    sliding-window-size: ${CIRCUIT_BREAKER_SLIDING_WINDOW:10}
    minimum-number-of-calls: ${CIRCUIT_BREAKER_MIN_CALLS:5}
    permitted-number-of-calls-in-half-open-state: ${CIRCUIT_BREAKER_HALF_OPEN_CALLS:3}
  retry:
    max-retry-attempts: ${RETRY_MAX_ATTEMPTS:3}
    wait-duration: ${RETRY_WAIT_DURATION:500ms}
    exponential-backoff-multiplier: ${RETRY_BACKOFF_MULTIPLIER:2.0}
    max-wait-duration: ${RETRY_MAX_WAIT_DURATION:5s}
  rate-limiter:
    limit-for-period: ${RATE_LIMITER_LIMIT:10}
    limit-refresh-period: ${RATE_LIMITER_PERIOD:1s}
    timeout-duration: ${RATE_LIMITER_TIMEOUT:100ms}
  bulkhead:
    max-concurrent-calls: ${BULKHEAD_MAX_CALLS:5}
    max-wait-duration: ${BULKHEAD_MAX_WAIT:100ms}

# Cache configuration
cache:
  external-services:
    recipe-scraper-ttl: ${CACHE_RECIPE_SCRAPER_TTL:10m}
    recipe-scraper-max-size: ${CACHE_RECIPE_SCRAPER_MAX_SIZE:1000}
    enable-stats: ${CACHE_ENABLE_STATS:true}

# Resilience4j configuration
resilience4j:
  circuitbreaker:
    instances:
      recipe-scraper:
        failure-rate-threshold: ${CIRCUIT_BREAKER_FAILURE_RATE:50.0}
        wait-duration-in-open-state: ${CIRCUIT_BREAKER_WAIT_DURATION:30s}
        sliding-window-size: ${CIRCUIT_BREAKER_SLIDING_WINDOW:10}
        minimum-number-of-calls: ${CIRCUIT_BREAKER_MIN_CALLS:5}
        permitted-number-of-calls-in-half-open-state: ${CIRCUIT_BREAKER_HALF_OPEN_CALLS:3}
        register-health-indicator: true
        record-exceptions:
          - com.recipe_manager.exception.ExternalServiceException
          - com.recipe_manager.exception.RecipeScraperException
          - feign.FeignException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
  retry:
    instances:
      recipe-scraper:
        max-attempts: ${RETRY_MAX_ATTEMPTS:3}
        wait-duration: ${RETRY_WAIT_DURATION:500ms}
        exponential-backoff-multiplier: ${RETRY_BACKOFF_MULTIPLIER:2.0}
        max-wait-duration: ${RETRY_MAX_WAIT_DURATION:5s}
        retry-exceptions:
          - com.recipe_manager.exception.ExternalServiceTimeoutException
          - feign.FeignException$InternalServerError
          - feign.FeignException$BadGateway
          - feign.FeignException$ServiceUnavailable
          - feign.FeignException$GatewayTimeout
        ignore-exceptions:
          - feign.FeignException$BadRequest
          - feign.FeignException$NotFound
  timelimiter:
    instances:
      recipe-scraper:
        timeout-duration: ${RECIPE_SCRAPER_TIMEOUT:5s}
        cancel-running-future: true
  bulkhead:
    instances:
      recipe-scraper:
        max-concurrent-calls: ${BULKHEAD_MAX_CALLS:5}
        max-wait-duration: ${BULKHEAD_MAX_WAIT:100ms}
