package com.recipe_manager.model.dto.recipe;

import static org.assertj.core.api.Assertions.assertThat;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import com.recipe_manager.model.dto.media.RecipeStepMediaDto;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;

@Tag("unit")
class RecipeStepDtoTest {

  @Test
  @DisplayName("All-args constructor assigns all fields")
  @Tag("standard-processing")
  void allArgsConstructorAssignsFields() {
    List<RecipeStepMediaDto> media = new ArrayList<>();
    LocalDateTime now = LocalDateTime.now();
    RecipeStepDto dto = RecipeStepDto.builder()
        .stepId(1L)
        .recipeId(2L)
        .stepNumber(1)
        .instruction("desc")
        .optional(true)
        .timerSeconds(60)
        .createdAt(now)
        .updatedAt(now)
        .media(media)
        .build();
    assertThat(dto.getStepId()).isEqualTo(1L);
    assertThat(dto.getRecipeId()).isEqualTo(2L);
    assertThat(dto.getStepNumber()).isEqualTo(1);
    assertThat(dto.getInstruction()).isEqualTo("desc");
    assertThat(dto.getOptional()).isTrue();
    assertThat(dto.getTimerSeconds()).isEqualTo(60);
    assertThat(dto.getCreatedAt()).isEqualTo(now);
    assertThat(dto.getUpdatedAt()).isEqualTo(now);
    assertThat(dto.getMedia()).isSameAs(media);
  }

  @Test
  @DisplayName("No-args constructor sets defaults and nulls")
  @Tag("standard-processing")
  void noArgsConstructorSetsDefaults() {
    RecipeStepDto dto = new RecipeStepDto();
    assertThat(dto.getStepId()).isNull();
    assertThat(dto.getRecipeId()).isNull();
    assertThat(dto.getStepNumber()).isNull();
    assertThat(dto.getInstruction()).isNull();
    assertThat(dto.getOptional()).isNull();
    assertThat(dto.getTimerSeconds()).isNull();
    assertThat(dto.getCreatedAt()).isNull();
    assertThat(dto.getUpdatedAt()).isNull();
    assertThat(dto.getMedia()).isNotNull();
    assertThat(dto.getMedia()).isEmpty();
  }

  @Test
  @DisplayName("Builder sets fields and uses defaults")
  @Tag("standard-processing")
  void builderSetsFieldsAndDefaults() {
    RecipeStepDto dto = RecipeStepDto.builder().stepNumber(2).instruction("D").optional(false).build();
    assertThat(dto.getStepNumber()).isEqualTo(2);
    assertThat(dto.getInstruction()).isEqualTo("D");
    assertThat(dto.getOptional()).isFalse();
    assertThat(dto.getMedia()).isNotNull();
    assertThat(dto.getMedia()).isEmpty();
  }

  @Test
  @DisplayName("Setters and getters work for all fields")
  @Tag("standard-processing")
  void settersAndGettersWork() {
    RecipeStepDto dto = new RecipeStepDto();
    dto.setStepId(10L);
    dto.setRecipeId(20L);
    dto.setStepNumber(3);
    dto.setInstruction("desc");
    dto.setOptional(true);
    dto.setTimerSeconds(120);
    LocalDateTime now = LocalDateTime.now();
    dto.setCreatedAt(now);
    dto.setUpdatedAt(now);
    List<RecipeStepMediaDto> media = new ArrayList<>();
    dto.setMedia(media);
    assertThat(dto.getStepId()).isEqualTo(10L);
    assertThat(dto.getRecipeId()).isEqualTo(20L);
    assertThat(dto.getStepNumber()).isEqualTo(3);
    assertThat(dto.getInstruction()).isEqualTo("desc");
    assertThat(dto.getOptional()).isTrue();
    assertThat(dto.getTimerSeconds()).isEqualTo(120);
    assertThat(dto.getCreatedAt()).isEqualTo(now);
    assertThat(dto.getUpdatedAt()).isEqualTo(now);
    assertThat(dto.getMedia()).isSameAs(media);
  }

  @Test
  @DisplayName("List mutability is direct (no defensive copy)")
  @Tag("standard-processing")
  void listMutabilityIsDirect() {
    // No list field to mutate in RecipeStepDto; skip this test or adapt if needed.
  }

  @Test
  @DisplayName("Equals/hashCode/toString are generated by Lombok")
  @Tag("standard-processing")
  void equalsHashCodeToString() {
    RecipeStepDto dto1 = RecipeStepDto.builder().stepNumber(1).instruction("A").build();
    RecipeStepDto dto2 = RecipeStepDto.builder().stepNumber(1).instruction("A").build();
    assertThat(dto1).isEqualTo(dto2);
    assertThat(dto1.hashCode()).isEqualTo(dto2.hashCode());
    assertThat(dto1.toString()).contains("A");
  }

  @Test
  @DisplayName("Null handling for all fields")
  @Tag("error-processing")
  void nullHandlingForAllFields() {
    RecipeStepDto dto = RecipeStepDto.builder().build();
    assertThat(dto.getStepId()).isNull();
    assertThat(dto.getRecipeId()).isNull();
    assertThat(dto.getStepNumber()).isNull();
    assertThat(dto.getInstruction()).isNull();
    assertThat(dto.getOptional()).isNull();
    assertThat(dto.getTimerSeconds()).isNull();
    assertThat(dto.getCreatedAt()).isNull();
    assertThat(dto.getUpdatedAt()).isNull();
    assertThat(dto.getMedia()).isNotNull();
    assertThat(dto.getMedia()).isEmpty();
  }
}
