package com.recipe_manager.model.dto.request;

import static org.assertj.core.api.Assertions.*;


import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;

@Tag("unit")
class CreateRecipeStepRequestTest {

  @Test
  @DisplayName("Builder sets all fields")
  @Tag("standard-processing")
  void builderSetsAllFields() {
    CreateRecipeStepRequest req = CreateRecipeStepRequest.builder()
        .stepNumber(1)
        .instruction("I")
        .optional(true)
        .timerSeconds(60)
        .build();
    assertThat(req.getStepNumber()).isEqualTo(1);
    assertThat(req.getInstruction()).isEqualTo("I");
    assertThat(req.getOptional()).isTrue();
    assertThat(req.getTimerSeconds()).isEqualTo(60);
  }

  @Test
  @DisplayName("Setters and getters work for all fields")
  @Tag("standard-processing")
  void settersAndGettersWork() {
    CreateRecipeStepRequest req = new CreateRecipeStepRequest();
    req.setInstruction("I");
    assertThat(req.getInstruction()).isEqualTo("I");
  }

  @Test
  @DisplayName("Equals/hashCode/toString are generated by Lombok")
  @Tag("standard-processing")
  void equalsHashCodeToString() {
    CreateRecipeStepRequest req1 = CreateRecipeStepRequest.builder().instruction("A").build();
    CreateRecipeStepRequest req2 = CreateRecipeStepRequest.builder().instruction("A").build();
    assertThat(req1).isEqualTo(req2);
    assertThat(req1.hashCode()).isEqualTo(req2.hashCode());
    assertThat(req1.toString()).contains("A");
  }

  @Test
  @DisplayName("Null handling for all fields")
  @Tag("error-processing")
  void nullHandlingForAllFields() {
    CreateRecipeStepRequest req = CreateRecipeStepRequest.builder().build();
    assertThat(req.getStepNumber()).isNull();
    assertThat(req.getInstruction()).isNull();
    assertThat(req.getOptional()).isNull();
    assertThat(req.getTimerSeconds()).isNull();
  }
}
