package com.recipe_manager.model.entity.recipe;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.UUID;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;

@Tag("unit")
class RecipeFavoriteIdTest {

  @Test
  @DisplayName("All-args constructor assigns all fields")
  @Tag("standard-processing")
  void allArgsConstructorAssignsFields() {
    UUID userId = UUID.randomUUID();
    RecipeFavoriteId id = new RecipeFavoriteId(userId, 1L);
    assertThat(id.getUserId()).isEqualTo(userId);
    assertThat(id.getRecipeId()).isEqualTo(1L);
  }

  @Test
  @DisplayName("No-args constructor sets nulls")
  @Tag("standard-processing")
  void noArgsConstructorSetsDefaults() {
    RecipeFavoriteId id = new RecipeFavoriteId();
    assertThat(id.getUserId()).isNull();
    assertThat(id.getRecipeId()).isNull();
  }

  @Test
  @DisplayName("Setters and getters work for all fields")
  @Tag("standard-processing")
  void settersAndGettersWork() {
    RecipeFavoriteId id = new RecipeFavoriteId();
    UUID userId = UUID.randomUUID();
    id.setUserId(userId);
    id.setRecipeId(2L);
    assertThat(id.getUserId()).isEqualTo(userId);
    assertThat(id.getRecipeId()).isEqualTo(2L);
  }

  @Test
  @DisplayName("Equals/hashCode/toString are generated by Lombok")
  @Tag("standard-processing")
  void equalsHashCodeToString() {
    UUID userId = UUID.randomUUID();
    RecipeFavoriteId id1 = RecipeFavoriteId.builder().userId(userId).recipeId(1L).build();
    RecipeFavoriteId id2 = RecipeFavoriteId.builder().userId(userId).recipeId(1L).build();
    assertThat(id1).isEqualTo(id2);
    assertThat(id1.hashCode()).isEqualTo(id2.hashCode());
    assertThat(id1.toString()).contains(userId.toString());
  }
}
