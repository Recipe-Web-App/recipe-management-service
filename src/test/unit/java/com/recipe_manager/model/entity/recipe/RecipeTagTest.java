package com.recipe_manager.model.entity.recipe;

import static org.assertj.core.api.Assertions.assertThat;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;

@Tag("unit")
class RecipeTagTest {

  @Test
  @DisplayName("All-args constructor assigns all fields")
  @Tag("standard-processing")
  void allArgsConstructorAssignsFields() {
    List<Recipe> recipes = new ArrayList<>();
    LocalDateTime now = LocalDateTime.now();
    RecipeTag tag = new RecipeTag(1L, "name", now, recipes);
    assertThat(tag.getTagId()).isEqualTo(1L);
    assertThat(tag.getName()).isEqualTo("name");
    assertThat(tag.getCreatedAt()).isEqualTo(now);
    assertThat(tag.getRecipes()).isSameAs(recipes);
  }

  @Test
  @DisplayName("No-args constructor sets nulls and empty list")
  @Tag("standard-processing")
  void noArgsConstructorSetsDefaults() {
    RecipeTag tag = new RecipeTag();
    assertThat(tag.getTagId()).isNull();
    assertThat(tag.getName()).isNull();
    assertThat(tag.getCreatedAt()).isNull();
    assertThat(tag.getRecipes()).isNotNull();
    assertThat(tag.getRecipes()).isEmpty();
  }

  @Test
  @DisplayName("Setters and getters work for all fields")
  @Tag("standard-processing")
  void settersAndGettersWork() {
    RecipeTag tag = new RecipeTag();
    tag.setName("Vegan");
    assertThat(tag.getName()).isEqualTo("Vegan");
    List<Recipe> list = new ArrayList<>();
    tag.setRecipes(list);
    assertThat(tag.getRecipes()).isSameAs(list);
  }

  @Test
  @DisplayName("Equals/hashCode/toString are generated by Lombok")
  @Tag("standard-processing")
  void equalsHashCodeToString() {
    RecipeTag t1 = RecipeTag.builder().name("A").build();
    RecipeTag t2 = RecipeTag.builder().name("A").build();
    assertThat(t1).isEqualTo(t2);
    assertThat(t1.hashCode()).isEqualTo(t2.hashCode());
    assertThat(t1.toString()).contains("A");
  }
}
