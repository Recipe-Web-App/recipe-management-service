{
  "info": {
    "name": "Recipe Manager - Actuator",
    "description": "Health checks, metrics, and operational endpoints for Recipe Manager Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "Get Application Health",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Health check successful', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Health status is UP', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response.status).to.equal('UP');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/actuator/health",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["actuator", "health"]
        }
      }
    },
    {
      "name": "Get Application Info",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Info endpoint accessible', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('App info contains build details', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('build');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/actuator/info",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["actuator", "info"]
        }
      }
    },
    {
      "name": "Get Application Metrics",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Metrics endpoint accessible', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Metrics contain names', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('names');",
              "    pm.expect(response.names).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/actuator/metrics",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["actuator", "metrics"]
        }
      }
    },
    {
      "name": "Get Application Environment",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Environment endpoint accessible', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Environment contains active profiles', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('activeProfiles');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/actuator/env",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["actuator", "env"]
        }
      }
    },
    {
      "name": "Get Configuration Properties",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Configuration properties accessible', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Configuration contains contexts', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('contexts');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/actuator/configprops",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["actuator", "configprops"]
        }
      }
    },
    {
      "name": "Get Prometheus Metrics",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Prometheus metrics accessible', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response contains Prometheus format', function () {",
              "    const responseText = pm.response.text();",
              "    pm.expect(responseText).to.include('# HELP');",
              "    pm.expect(responseText).to.include('# TYPE');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/actuator/prometheus",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["actuator", "prometheus"]
        }
      }
    }
  ]
}
