{
  "info": {
    "name": "Recipe Manager - Recipe Management",
    "description": "Core recipe CRUD operations and search functionality",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{recipeManagementServiceAccessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "testRecipeId",
      "value": "123",
      "type": "string",
      "description": "Sample recipe ID for testing"
    }
  ],
  "item": [
    {
      "name": "Create Recipe",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Recipe created successfully', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Extract recipe ID', function () {",
              "    const response = pm.response.json();",
              "    if (response.id) {",
              "        pm.environment.set('recipeManagementServiceCreatedRecipeId', response.id);",
              "    }",
              "});",
              "",
              "pm.test('Recipe has required fields', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('id');",
              "    pm.expect(response).to.have.property('title');",
              "    pm.expect(response).to.have.property('description');",
              "    pm.expect(response).to.have.property('ingredients');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Spaghetti Carbonara\",\n  \"description\": \"Classic Italian pasta dish with eggs, cheese, and pancetta\",\n  \"originUrl\": \"https://example.com/carbonara-recipe\",\n  \"servings\": 4,\n  \"preparationTime\": 15,\n  \"cookingTime\": 20,\n  \"difficulty\": \"MEDIUM\",\n  \"cuisine\": \"ITALIAN\",\n  \"ingredients\": [\n    {\n      \"ingredientName\": \"Spaghetti\",\n      \"quantity\": 400,\n      \"unit\": \"GRAMS\",\n      \"isOptional\": false\n    },\n    {\n      \"ingredientName\": \"Pancetta\",\n      \"quantity\": 150,\n      \"unit\": \"GRAMS\",\n      \"isOptional\": false\n    },\n    {\n      \"ingredientName\": \"Parmesan Cheese\",\n      \"quantity\": 100,\n      \"unit\": \"GRAMS\",\n      \"isOptional\": false\n    },\n    {\n      \"ingredientName\": \"Eggs\",\n      \"quantity\": 3,\n      \"unit\": \"PIECES\",\n      \"isOptional\": false\n    },\n    {\n      \"ingredientName\": \"Black Pepper\",\n      \"quantity\": 1,\n      \"unit\": \"TEASPOON\",\n      \"isOptional\": false\n    }\n  ],\n  \"steps\": [\n    {\n      \"stepNumber\": 1,\n      \"instruction\": \"Bring a large pot of salted water to boil and cook spaghetti according to package directions.\",\n      \"duration\": 10\n    },\n    {\n      \"stepNumber\": 2,\n      \"instruction\": \"While pasta cooks, dice pancetta and cook in a large skillet until crispy.\",\n      \"duration\": 5\n    },\n    {\n      \"stepNumber\": 3,\n      \"instruction\": \"In a bowl, whisk together eggs, grated Parmesan, and black pepper.\",\n      \"duration\": 2\n    },\n    {\n      \"stepNumber\": 4,\n      \"instruction\": \"Drain pasta and immediately toss with pancetta and egg mixture. Serve immediately.\",\n      \"duration\": 3\n    }\n  ]\n}"
        },
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes"]
        }
      }
    },
    {
      "name": "Get All Recipes",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Recipes retrieved successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});",
              "",
              "pm.test('Recipes have required fields', function () {",
              "    const response = pm.response.json();",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('id');",
              "        pm.expect(response[0]).to.have.property('title');",
              "        pm.expect(response[0]).to.have.property('description');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes"]
        }
      }
    },
    {
      "name": "Get Recipe by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Recipe retrieved successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Recipe has required fields', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('id');",
              "    pm.expect(response).to.have.property('title');",
              "    pm.expect(response).to.have.property('description');",
              "    pm.expect(response).to.have.property('ingredients');",
              "    pm.expect(response).to.have.property('steps');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes/{{testRecipeId}}",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes", "{{testRecipeId}}"]
        }
      }
    },
    {
      "name": "Update Recipe",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Recipe updated successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Updated fields are correct', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response.title).to.include('Updated');",
              "    pm.expect(response.servings).to.equal(6);",
              "    pm.expect(response.difficulty).to.equal('EASY');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Spaghetti Carbonara - Updated\",\n  \"description\": \"Classic Italian pasta dish with eggs, cheese, and pancetta - Updated version with improved technique\",\n  \"servings\": 6,\n  \"preparationTime\": 20,\n  \"cookingTime\": 25,\n  \"difficulty\": \"EASY\",\n  \"cuisine\": \"ITALIAN\"\n}"
        },
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes/{{testRecipeId}}",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes", "{{testRecipeId}}"]
        }
      }
    },
    {
      "name": "Delete Recipe",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Recipe deleted successfully', function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes/{{testRecipeId}}",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes", "{{testRecipeId}}"]
        }
      }
    },
    {
      "name": "Search Recipes",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Search completed successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Search results are array', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});",
              "",
              "pm.test('Search results have required fields', function () {",
              "    const response = pm.response.json();",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('id');",
              "        pm.expect(response[0]).to.have.property('title');",
              "        pm.expect(response[0]).to.have.property('description');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"query\": \"pasta\",\n  \"cuisine\": \"ITALIAN\",\n  \"difficulty\": \"MEDIUM\",\n  \"maxPreparationTime\": 30,\n  \"maxCookingTime\": 45,\n  \"servings\": 4,\n  \"tags\": [\"comfort-food\", \"dinner\"],\n  \"ingredients\": [\"pasta\", \"cheese\"]\n}"
        },
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes/search",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes", "search"]
        }
      }
    }
  ]
}
