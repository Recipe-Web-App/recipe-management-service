{
  "info": {
    "name": "Recipe Manager - Tag Management",
    "description": "Tag management and search operations for recipes",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{recipeManagementServiceAccessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "testRecipeId",
      "value": "123",
      "type": "string",
      "description": "Sample recipe ID for testing"
    },
    {
      "key": "testTagName",
      "value": "vegetarian",
      "type": "string",
      "description": "Sample tag name for testing"
    }
  ],
  "item": [
    {
      "name": "Get Recipe Tags",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Recipe tags retrieved successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});",
              "",
              "pm.test('Tags have required fields', function () {",
              "    const response = pm.response.json();",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('id');",
              "        pm.expect(response[0]).to.have.property('name');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes/{{testRecipeId}}/tags",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes", "{{testRecipeId}}", "tags"]
        }
      }
    },
    {
      "name": "Add Tag to Recipe",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Tag added to recipe successfully', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Tag has required fields', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('id');",
              "    pm.expect(response).to.have.property('name');",
              "    pm.expect(response).to.have.property('recipeId');",
              "});",
              "",
              "pm.test('Extract tag ID', function () {",
              "    const response = pm.response.json();",
              "    if (response.id) {",
              "        pm.environment.set('recipeManagementServiceCreatedTagId', response.id);",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"vegetarian\",\n  \"description\": \"Recipe suitable for vegetarians\",\n  \"category\": \"DIETARY\",\n  \"color\": \"#4CAF50\"\n}"
        },
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes/{{testRecipeId}}/tags",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes", "{{testRecipeId}}", "tags"]
        }
      }
    },
    {
      "name": "Remove Tag from Recipe",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Tag removed from recipe successfully', function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tagName\": \"{{testTagName}}\"\n}"
        },
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/recipes/{{testRecipeId}}/tags",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "recipes", "{{testRecipeId}}", "tags"]
        }
      }
    },
    {
      "name": "Get All Tags",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('All tags retrieved successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});",
              "",
              "pm.test('Tags have required fields', function () {",
              "    const response = pm.response.json();",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('id');",
              "        pm.expect(response[0]).to.have.property('name');",
              "        pm.expect(response[0]).to.have.property('usageCount');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/tags",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "tags"]
        }
      }
    },
    {
      "name": "Get Popular Tags",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Popular tags retrieved successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});",
              "",
              "pm.test('Popular tags are sorted by usage', function () {",
              "    const response = pm.response.json();",
              "    if (response.length > 1) {",
              "        pm.expect(response[0].usageCount).to.be.at.least(response[1].usageCount);",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/tags/popular?limit=10",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "tags", "popular"],
          "query": [
            {
              "key": "limit",
              "value": "10"
            }
          ]
        }
      }
    },
    {
      "name": "Search Tags",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Tag search completed successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});",
              "",
              "pm.test('Search results match query', function () {",
              "    const response = pm.response.json();",
              "    if (response.length > 0) {",
              "        pm.expect(response[0].name.toLowerCase()).to.include('pasta');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/tags/search?query=pasta&limit=20",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "tags", "search"],
          "query": [
            {
              "key": "query",
              "value": "pasta"
            },
            {
              "key": "limit",
              "value": "20"
            }
          ]
        }
      }
    },
    {
      "name": "Get Tags by Category",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Tags by category retrieved successfully', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});",
              "",
              "pm.test('All tags belong to requested category', function () {",
              "    const response = pm.response.json();",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('category');",
              "        pm.expect(response[0].category).to.equal('DIETARY');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{recipeManagementServiceBaseUrl}}/recipe-management/tags?category=DIETARY",
          "host": ["{{recipeManagementServiceBaseUrl}}"],
          "path": ["recipe-management", "tags"],
          "query": [
            {
              "key": "category",
              "value": "DIETARY"
            }
          ]
        }
      }
    }
  ]
}
